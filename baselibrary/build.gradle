apply plugin: 'com.android.library'

// butterKnife必须（哪里使用放哪里）
apply plugin: 'com.jakewharton.butterknife'
android {
    def versions = rootProject.ext.versions
    compileSdkVersion versions.compileVersion
    buildToolsVersion versions.buildToolVersion
    defaultConfig {
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode versions.versionCode
        versionName versions.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // 阿里巴巴ARouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    def dependencies = rootProject.ext.deps
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation dependencies.junit
    androidTestImplementation dependencies.test
    androidTestImplementation(dependencies.testEspresso) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    // GitHub
    apply plugin: 'com.github.dcendents.android-maven'
    group = 'com.github.shangchunfa' // ××××代表你github名字
    // V7包
    compile dependencies.appcompat
    // butterKnife
    compile dependencies.butterKnife
    // butterKnife注解处理器
    annotationProcessor dependencies.butterKnifeAnnotation
    // ARouter
    compile dependencies.ARouter
    // ARouter注解处理器
    annotationProcessor dependencies.ArouterAnnotation
    // 沉浸式状态栏的第三方库systemBarTint
    compile dependencies.systemBarTint
    // Glide
    compile dependencies.glide
    // OkHttp
    compile dependencies.OkHttp
    // KLog日志工具类
    compile dependencies.KLog
    // Gson
    compile dependencies.Gson
    // RecyclerView
    compile dependencies.RecyclerView
    // EventBus 3.0
    compile dependencies.EventBus
    // RxPermission
    compile dependencies.RXJava2
    compile dependencies.RxPermission
}
